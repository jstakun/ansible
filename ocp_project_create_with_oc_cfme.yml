---
  - name: Create Openshift Container Platform project
    hosts: ocp_client
    remote_user: root
    gather_facts: no
 
    vars:
      #set this params in cfme
      #you could set this variables in cfme service catalog item dialog using following naming convention param_<variable name> ie. param_ocp_token
      ocp_token: ABCD
      ocp_host: localhost
      ocp_port: 443
      ocp_app_template: cakephp-mysql-example
      project_name: ansible-test-project

      project_displayName: Ansible Test Project
      project_description: This project was created using CloudForms and Ansible 
  
      project_requestCpu: 2
      project_requestMemory: 2Gi
      project_limitsCpu: 2
      project_limitsMemory: 2Gi
      project_limitStorage: 2Gi

      service_url: "{{ manageiq.api_url }}/api/{{ manageiq.service }}" 
      
    tasks:
      - name: Login with token
        command: 'oc login --insecure-skip-tls-verify=true --token={{ocp_token}} --server=https://{{ocp_host}}:{{ocp_port}}'
        register: result

      - debug:
          var: result          

      - name: Create user project
        command: "oc new-project {{project_name}} --description='{{project_description}}' --display-name='{{project_displayName}}'"   
        register: result

      - debug:
          var: result          

#  cluster-admin required
#      - name: Proces resource quota template file
#        template:
#          src: "resource-quota.j2"
#          dest: ./ansible-resource-quota.yml
      
#      - name: Create resource quota in project
#        command: "oc create -f ansible-resource-quota.yml -n {{project_name}}"   
#        register: result
 
#      - debug:
#          var: result    

#      - name: Proces limit range template file
#        template:
#          src: "limit-range.j2"
#          dest: ./ansible-limit-range.yml
      
#      - name: Create limit range in project
#        command: "oc create -f ansible-limit-range.yml -n {{project_name}}"   
#        register: result
 
#      - debug:
#          var: result    

      - name: Create app from template
        command: "oc new-app {{ ocp_app_template }} -n {{project_name}}"
        register: result

      - debug:
          var: result

      - name: Set service name
        uri:
          url: "{{ service_url }}"
          method: PUT
          validate_certs: no
          headers:
            X-Auth-Token: "{{ manageiq.api_token }}"
            Content-Type: "application/json"
          body_format: json
          body:
            name: "OCP | project {{ project_name }}" 
            description: "{{ project_description }}" 
          return_content: yes
        register: service_output
        tags: cfme

      - debug: var=service_output          
        tags: cfme
