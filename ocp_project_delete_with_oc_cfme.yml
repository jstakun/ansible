---
  - name: Delete Openshift Container Platform project
    hosts: ocp_client
    remote_user: root
    gather_facts: no
 
    vars:
      ocp_token: ABCD
      ocp_use_token: yes

      ocp_login: username
      ocp_password: password
      ocp_use_login: no  

      ocp_host: localhost
      ocp_port: 8443 

      project_name: ansible-test-project

      service_url: "{{ manageiq.api_url }}/api/{{ manageiq.service }}" 
      
    tasks:

      #- debug: var=manageiq.api_url

      #- debug: var=manageiq.api_token

      #- debug: var=manageiq.service

      #- debug: var=manageiq.event_target

      - name: Get service details
        uri:
          url: "{{ service_url }}"
          method: GET
          validate_certs: no
          headers:
            X-Auth-Token: "{{ manageiq.api_token }}"
            Content-Type: "application/json"
          body_format: json
          return_content: yes
        register: service_output
        tags: cfme

      - debug: var=service_output 
        tags: cfme 

      - set_fact: project_name="{{ service_output.json.options.dialog.dialog_param_project_name }}"
        tags: cfme

      - set_fact: ocp_host="{{ service_output.json.options.dialog.dialog_param_ocp_host }}"
        tags: cfme

      - set_fact: opc_port="{{ service_output.json.options.dialog.dialog_param_ocp_port }}"
        tags: cfme

        #by default this token will expire in 24 hours 
      - set_fact: ocp_token="{{ service_output.json.options.dialog.dialog_param_ocp_token }}"
        when: (oc_use_token == 'yes')
        tags: cfme
 
      - set_fact: ocp_login="{{ service_output.json.options.dialog.dialog_param_ocp_login }}"
        when: (oc_use_login == 'yes')
        tags: cfme

      - set_fact: ocp_password="{{ service_output.json.options.dialog.dialog_param_ocp_password }}"
        when: (oc_use_login == 'yes')
        tags: cfme
        
      - debug: var=project_name

      - debug: var=ocp_host

      - debug: var=ocp_port

      - debug: var=ocp_token
        when: (oc_use_token == 'yes')

      - debug: var=ocp_login
        when: (oc_use_login == 'yes')      

      - name: Login with token
        when: (oc_use_token == 'yes')
        command: 'oc login --insecure-skip-tls-verify=true --token={{ocp_token}} --server=https://{{ocp_host}}:{{ocp_port}}'
        register: result

      - name: Login with login and password
        when: (ocp_use_login == 'yes')
        command: 'oc login --insecure-skip-tls-verify=true -u={{ocp_login}} -p={{ocp_password}} --server=https://{{ocp_host}}:{{ocp_port}}'
        register: result

      - debug:
          var: result
          
      - name: Delete project
        command: "oc delete project {{project_name}}"
        register: result

      - debug:
          var: result          

